/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB____LIB_MODES_ALLCOLOR_ALLCOLORCONFIG_PB_H_INCLUDED
#define PB____LIB_MODES_ALLCOLOR_ALLCOLORCONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ColorHSV {
    uint32_t H;
    uint32_t S;
    uint32_t V;
/* @@protoc_insertion_point(struct:ColorHSV) */
} ColorHSV;


typedef struct _ColorRGB {
    uint32_t R;
    uint32_t G;
    uint32_t B;
/* @@protoc_insertion_point(struct:ColorRGB) */
} ColorRGB;


typedef struct _AllColorConfig {
    pb_size_t which_Settings;
    union {
        ColorRGB colorRGB;
        ColorHSV colorHSV;
        uint32_t brightness;
    } Settings;
/* @@protoc_insertion_point(struct:AllColorConfig) */
} AllColorConfig;


/* Initializer values for message structs */
#define AllColorConfig_init_default              {0, {ColorRGB_init_default}}
#define ColorHSV_init_default                    {0, 0, 0}
#define ColorRGB_init_default                    {0, 0, 0}
#define AllColorConfig_init_zero                 {0, {ColorRGB_init_zero}}
#define ColorHSV_init_zero                       {0, 0, 0}
#define ColorRGB_init_zero                       {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ColorHSV_H_tag                           1
#define ColorHSV_S_tag                           2
#define ColorHSV_V_tag                           3
#define ColorRGB_R_tag                           1
#define ColorRGB_G_tag                           2
#define ColorRGB_B_tag                           3
#define AllColorConfig_colorRGB_tag              1
#define AllColorConfig_colorHSV_tag              2
#define AllColorConfig_brightness_tag            3

/* Struct field encoding specification for nanopb */
#define AllColorConfig_FIELDLIST(X, a) \
X(a, STATIC, ONEOF, MESSAGE, (Settings,colorRGB,Settings.colorRGB), 1) \
X(a, STATIC, ONEOF, MESSAGE, (Settings,colorHSV,Settings.colorHSV), 2) \
X(a, STATIC, ONEOF, UINT32, (Settings,brightness,Settings.brightness), 3)
#define AllColorConfig_CALLBACK NULL
#define AllColorConfig_DEFAULT NULL
#define AllColorConfig_Settings_colorRGB_MSGTYPE ColorRGB
#define AllColorConfig_Settings_colorHSV_MSGTYPE ColorHSV

#define ColorHSV_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, H, 1) \
X(a, STATIC, SINGULAR, UINT32, S, 2) \
X(a, STATIC, SINGULAR, UINT32, V, 3)
#define ColorHSV_CALLBACK NULL
#define ColorHSV_DEFAULT NULL

#define ColorRGB_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UINT32, R, 1) \
X(a, STATIC, SINGULAR, UINT32, G, 2) \
X(a, STATIC, SINGULAR, UINT32, B, 3)
#define ColorRGB_CALLBACK NULL
#define ColorRGB_DEFAULT NULL

extern const pb_msgdesc_t AllColorConfig_msg;
extern const pb_msgdesc_t ColorHSV_msg;
extern const pb_msgdesc_t ColorRGB_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AllColorConfig_fields &AllColorConfig_msg
#define ColorHSV_fields &ColorHSV_msg
#define ColorRGB_fields &ColorRGB_msg

/* Maximum encoded size of messages (where known) */
#define AllColorConfig_size                      20
#define ColorHSV_size                            18
#define ColorRGB_size                            18

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
